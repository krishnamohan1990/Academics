//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApp.TestServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((this.BranchIDField.Equals(value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="role", Namespace="http://schemas.datacontract.org/2004/07/Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="academicYear", Namespace="http://schemas.datacontract.org/2004/07/Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class academicYear : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AcademicYearIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AcademicYearID {
            get {
                return this.AcademicYearIDField;
            }
            set {
                if ((this.AcademicYearIDField.Equals(value) != true)) {
                    this.AcademicYearIDField = value;
                    this.RaisePropertyChanged("AcademicYearID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((this.BranchIDField.Equals(value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrentYear {
            get {
                return this.IsCurrentYearField;
            }
            set {
                if ((this.IsCurrentYearField.Equals(value) != true)) {
                    this.IsCurrentYearField = value;
                    this.RaisePropertyChanged("IsCurrentYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="branch", Namespace="http://schemas.datacontract.org/2004/07/Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class branch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((this.BranchIDField.Equals(value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="program", Namespace="http://schemas.datacontract.org/2004/07/Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class program : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProgramIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((this.BranchIDField.Equals(value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProgramID {
            get {
                return this.ProgramIDField;
            }
            set {
                if ((this.ProgramIDField.Equals(value) != true)) {
                    this.ProgramIDField = value;
                    this.RaisePropertyChanged("ProgramID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        void AddUser(MvcApp.TestServiceReference.user user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(MvcApp.TestServiceReference.user user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDetails", ReplyAction="http://tempuri.org/IService/GetUserDetailsResponse")]
        MvcApp.TestServiceReference.user GetUserDetails(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDetails", ReplyAction="http://tempuri.org/IService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.user> GetUserDetailsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterUser", ReplyAction="http://tempuri.org/IService/RegisterUserResponse")]
        void RegisterUser(MvcApp.TestServiceReference.user userRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterUser", ReplyAction="http://tempuri.org/IService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(MvcApp.TestServiceReference.user userRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRole", ReplyAction="http://tempuri.org/IService/AddRoleResponse")]
        void AddRole(MvcApp.TestServiceReference.role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRole", ReplyAction="http://tempuri.org/IService/AddRoleResponse")]
        System.Threading.Tasks.Task AddRoleAsync(MvcApp.TestServiceReference.role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserRole", ReplyAction="http://tempuri.org/IService/AddUserRoleResponse")]
        void AddUserRole(string userId, string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserRole", ReplyAction="http://tempuri.org/IService/AddUserRoleResponse")]
        System.Threading.Tasks.Task AddUserRoleAsync(string userId, string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddYear", ReplyAction="http://tempuri.org/IService/AddYearResponse")]
        void AddYear(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddYear", ReplyAction="http://tempuri.org/IService/AddYearResponse")]
        System.Threading.Tasks.Task AddYearAsync(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateYear", ReplyAction="http://tempuri.org/IService/UpdateYearResponse")]
        void UpdateYear(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateYear", ReplyAction="http://tempuri.org/IService/UpdateYearResponse")]
        System.Threading.Tasks.Task UpdateYearAsync(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteYear", ReplyAction="http://tempuri.org/IService/DeleteYearResponse")]
        void DeleteYear(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteYear", ReplyAction="http://tempuri.org/IService/DeleteYearResponse")]
        System.Threading.Tasks.Task DeleteYearAsync(MvcApp.TestServiceReference.academicYear year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurrentYear", ReplyAction="http://tempuri.org/IService/GetCurrentYearResponse")]
        MvcApp.TestServiceReference.academicYear GetCurrentYear(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurrentYear", ReplyAction="http://tempuri.org/IService/GetCurrentYearResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.academicYear> GetCurrentYearAsync(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllAcademicYears", ReplyAction="http://tempuri.org/IService/GetAllAcademicYearsResponse")]
        MvcApp.TestServiceReference.academicYear[] GetAllAcademicYears(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllAcademicYears", ReplyAction="http://tempuri.org/IService/GetAllAcademicYearsResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.academicYear[]> GetAllAcademicYearsAsync(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBranch", ReplyAction="http://tempuri.org/IService/AddBranchResponse")]
        void AddBranch(MvcApp.TestServiceReference.branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBranch", ReplyAction="http://tempuri.org/IService/AddBranchResponse")]
        System.Threading.Tasks.Task AddBranchAsync(MvcApp.TestServiceReference.branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBranch", ReplyAction="http://tempuri.org/IService/DeleteBranchResponse")]
        void DeleteBranch(System.Guid branchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBranch", ReplyAction="http://tempuri.org/IService/DeleteBranchResponse")]
        System.Threading.Tasks.Task DeleteBranchAsync(System.Guid branchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBranch", ReplyAction="http://tempuri.org/IService/GetBranchResponse")]
        MvcApp.TestServiceReference.branch GetBranch(System.Guid branchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBranch", ReplyAction="http://tempuri.org/IService/GetBranchResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.branch> GetBranchAsync(System.Guid branchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBranches", ReplyAction="http://tempuri.org/IService/GetAllBranchesResponse")]
        MvcApp.TestServiceReference.branch[] GetAllBranches(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBranches", ReplyAction="http://tempuri.org/IService/GetAllBranchesResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.branch[]> GetAllBranchesAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertProgram", ReplyAction="http://tempuri.org/IService/InsertProgramResponse")]
        void InsertProgram(MvcApp.TestServiceReference.program program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertProgram", ReplyAction="http://tempuri.org/IService/InsertProgramResponse")]
        System.Threading.Tasks.Task InsertProgramAsync(MvcApp.TestServiceReference.program program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProgram", ReplyAction="http://tempuri.org/IService/DeleteProgramResponse")]
        void DeleteProgram(MvcApp.TestServiceReference.program program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProgram", ReplyAction="http://tempuri.org/IService/DeleteProgramResponse")]
        System.Threading.Tasks.Task DeleteProgramAsync(MvcApp.TestServiceReference.program program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgram", ReplyAction="http://tempuri.org/IService/SelectProgramResponse")]
        MvcApp.TestServiceReference.program SelectProgram(System.Guid programId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgram", ReplyAction="http://tempuri.org/IService/SelectProgramResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.program> SelectProgramAsync(System.Guid programId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgramsByBranch", ReplyAction="http://tempuri.org/IService/SelectProgramsByBranchResponse")]
        MvcApp.TestServiceReference.program[] SelectProgramsByBranch(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgramsByBranch", ReplyAction="http://tempuri.org/IService/SelectProgramsByBranchResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.program[]> SelectProgramsByBranchAsync(System.Guid branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgramsByYear", ReplyAction="http://tempuri.org/IService/SelectProgramsByYearResponse")]
        MvcApp.TestServiceReference.program[] SelectProgramsByYear(System.Guid yearId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SelectProgramsByYear", ReplyAction="http://tempuri.org/IService/SelectProgramsByYearResponse")]
        System.Threading.Tasks.Task<MvcApp.TestServiceReference.program[]> SelectProgramsByYearAsync(System.Guid yearId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MvcApp.TestServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MvcApp.TestServiceReference.IService>, MvcApp.TestServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUser(MvcApp.TestServiceReference.user user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(MvcApp.TestServiceReference.user user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public MvcApp.TestServiceReference.user GetUserDetails(string userId) {
            return base.Channel.GetUserDetails(userId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.user> GetUserDetailsAsync(string userId) {
            return base.Channel.GetUserDetailsAsync(userId);
        }
        
        public void RegisterUser(MvcApp.TestServiceReference.user userRequest) {
            base.Channel.RegisterUser(userRequest);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(MvcApp.TestServiceReference.user userRequest) {
            return base.Channel.RegisterUserAsync(userRequest);
        }
        
        public void AddRole(MvcApp.TestServiceReference.role role) {
            base.Channel.AddRole(role);
        }
        
        public System.Threading.Tasks.Task AddRoleAsync(MvcApp.TestServiceReference.role role) {
            return base.Channel.AddRoleAsync(role);
        }
        
        public void AddUserRole(string userId, string roleId) {
            base.Channel.AddUserRole(userId, roleId);
        }
        
        public System.Threading.Tasks.Task AddUserRoleAsync(string userId, string roleId) {
            return base.Channel.AddUserRoleAsync(userId, roleId);
        }
        
        public void AddYear(MvcApp.TestServiceReference.academicYear year) {
            base.Channel.AddYear(year);
        }
        
        public System.Threading.Tasks.Task AddYearAsync(MvcApp.TestServiceReference.academicYear year) {
            return base.Channel.AddYearAsync(year);
        }
        
        public void UpdateYear(MvcApp.TestServiceReference.academicYear year) {
            base.Channel.UpdateYear(year);
        }
        
        public System.Threading.Tasks.Task UpdateYearAsync(MvcApp.TestServiceReference.academicYear year) {
            return base.Channel.UpdateYearAsync(year);
        }
        
        public void DeleteYear(MvcApp.TestServiceReference.academicYear year) {
            base.Channel.DeleteYear(year);
        }
        
        public System.Threading.Tasks.Task DeleteYearAsync(MvcApp.TestServiceReference.academicYear year) {
            return base.Channel.DeleteYearAsync(year);
        }
        
        public MvcApp.TestServiceReference.academicYear GetCurrentYear(System.Guid branchId) {
            return base.Channel.GetCurrentYear(branchId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.academicYear> GetCurrentYearAsync(System.Guid branchId) {
            return base.Channel.GetCurrentYearAsync(branchId);
        }
        
        public MvcApp.TestServiceReference.academicYear[] GetAllAcademicYears(System.Guid branchId) {
            return base.Channel.GetAllAcademicYears(branchId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.academicYear[]> GetAllAcademicYearsAsync(System.Guid branchId) {
            return base.Channel.GetAllAcademicYearsAsync(branchId);
        }
        
        public void AddBranch(MvcApp.TestServiceReference.branch branch) {
            base.Channel.AddBranch(branch);
        }
        
        public System.Threading.Tasks.Task AddBranchAsync(MvcApp.TestServiceReference.branch branch) {
            return base.Channel.AddBranchAsync(branch);
        }
        
        public void DeleteBranch(System.Guid branchID) {
            base.Channel.DeleteBranch(branchID);
        }
        
        public System.Threading.Tasks.Task DeleteBranchAsync(System.Guid branchID) {
            return base.Channel.DeleteBranchAsync(branchID);
        }
        
        public MvcApp.TestServiceReference.branch GetBranch(System.Guid branchID) {
            return base.Channel.GetBranch(branchID);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.branch> GetBranchAsync(System.Guid branchID) {
            return base.Channel.GetBranchAsync(branchID);
        }
        
        public MvcApp.TestServiceReference.branch[] GetAllBranches(System.Guid userID) {
            return base.Channel.GetAllBranches(userID);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.branch[]> GetAllBranchesAsync(System.Guid userID) {
            return base.Channel.GetAllBranchesAsync(userID);
        }
        
        public void InsertProgram(MvcApp.TestServiceReference.program program) {
            base.Channel.InsertProgram(program);
        }
        
        public System.Threading.Tasks.Task InsertProgramAsync(MvcApp.TestServiceReference.program program) {
            return base.Channel.InsertProgramAsync(program);
        }
        
        public void DeleteProgram(MvcApp.TestServiceReference.program program) {
            base.Channel.DeleteProgram(program);
        }
        
        public System.Threading.Tasks.Task DeleteProgramAsync(MvcApp.TestServiceReference.program program) {
            return base.Channel.DeleteProgramAsync(program);
        }
        
        public MvcApp.TestServiceReference.program SelectProgram(System.Guid programId) {
            return base.Channel.SelectProgram(programId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.program> SelectProgramAsync(System.Guid programId) {
            return base.Channel.SelectProgramAsync(programId);
        }
        
        public MvcApp.TestServiceReference.program[] SelectProgramsByBranch(System.Guid branchId) {
            return base.Channel.SelectProgramsByBranch(branchId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.program[]> SelectProgramsByBranchAsync(System.Guid branchId) {
            return base.Channel.SelectProgramsByBranchAsync(branchId);
        }
        
        public MvcApp.TestServiceReference.program[] SelectProgramsByYear(System.Guid yearId) {
            return base.Channel.SelectProgramsByYear(yearId);
        }
        
        public System.Threading.Tasks.Task<MvcApp.TestServiceReference.program[]> SelectProgramsByYearAsync(System.Guid yearId) {
            return base.Channel.SelectProgramsByYearAsync(yearId);
        }
    }
}
